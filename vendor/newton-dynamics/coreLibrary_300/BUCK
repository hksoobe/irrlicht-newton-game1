
cxx_library(
    name = "pthreads",
    supported_platforms_regex = "^windows.*",
    headers = subdir_glob([
        ("source/pthreads.2", "pthread.h"),
        ("source/pthreads.2", "implement.h"),
        ("source/pthreads.2", "semaphore.h"),
        ("source/pthreads.2", "sched.h"),
    ]),
    exported_headers = subdir_glob([
        ("source/pthreads.2", "pthread.h"),
    ]),
    header_namespace = "",
    srcs = glob([
        "source/pthreads.2/pthread.c",
    ]),
    compiler_flags = [
        "-fdeclspec",
    ],
    visibility = [
        "PUBLIC",
    ],
)

cxx_library(
    name = "coreLibrary_300",
    # # For Windows users - since Buck does not yet work with
    # # `supported_platforms_regex` quite well - just uncomment the following lines:
    # deps = [
    #     ":pthreads",
    # ],
    headers = glob([
        "source/core/*.h",
        "source/physics/*.h",
        "source/meshUtil/*.h",
        "source/newton/*.h"
    ]),
    exported_headers = subdir_glob([
        ("source/core", "*.h"),
        ("source/meshUtil", "*.h"),
        ("source/newton", "*.h"),
        ("source/physics", "*.h"),
    ]),
    header_namespace = "",
    srcs = glob([
        "source/core/*.cpp",
        "source/physics/*.cpp",
        "source/meshUtil/*.cpp",
        "source/newton/*.cpp"
    ]),
    compiler_flags = [
        "-fpic",
        "-msse",
        "-msse3",
        "-msse4",
        "-mfpmath=sse",
        "-ffloat-store",
        "-ffast-math",
        "-freciprocal-math",
        "-funsafe-math-optimizations",
        "-fsingle-precision-constant"
    ],
    visibility = [ "PUBLIC" ],
)

cxx_library(
    name = "NewtonStatic",
    deps = [ ":coreLibrary_300" ],
    exported_deps = [ ":coreLibrary_300" ],
    visibility = [ "PUBLIC" ],
)

cxx_library(
    name = "Newton",
    deps = [ ":coreLibrary_300" ],
    exported_deps = [ ":coreLibrary_300" ],
    visibility = [ "PUBLIC" ],
)
